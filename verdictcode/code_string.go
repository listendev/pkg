// Code generated by "stringer -type=Code"; DO NOT EDIT.

package verdictcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DDN01-1001]
	_ = x[FNI001-1]
	_ = x[FNI002-2]
	_ = x[FNI003-3]
	_ = x[FNI004-4]
	_ = x[FNI005-5]
	_ = x[FNI006-6]
	_ = x[FNI007-7]
	_ = x[FNI008-8]
	_ = x[MDN01-1021]
	_ = x[MDN02-1022]
	_ = x[MDN03-1023]
	_ = x[MDN04-1024]
	_ = x[MDN05-1025]
	_ = x[MDN06-1026]
	_ = x[MDN07-1027]
	_ = x[MDN08-1028]
	_ = x[RUN001-1200]
	_ = x[STN001-1101]
	_ = x[STN002-1102]
	_ = x[STN003-1103]
	_ = x[STN004-1104]
	_ = x[STN005-1105]
	_ = x[STN006-1106]
	_ = x[STN007-1107]
	_ = x[STN008-1108]
	_ = x[STN009-1109]
	_ = x[TSN01-1011]
	_ = x[TSP01-1012]
	_ = x[UNK-0]
}

const (
	_Code_name_0 = "UNKFNI001FNI002FNI003FNI004FNI005FNI006FNI007FNI008"
	_Code_name_1 = "DDN01"
	_Code_name_2 = "TSN01TSP01"
	_Code_name_3 = "MDN01MDN02MDN03MDN04MDN05MDN06MDN07MDN08"
	_Code_name_4 = "STN001STN002STN003STN004STN005STN006STN007STN008STN009"
	_Code_name_5 = "RUN001"
)

var (
	_Code_index_0 = [...]uint8{0, 3, 9, 15, 21, 27, 33, 39, 45, 51}
	_Code_index_2 = [...]uint8{0, 5, 10}
	_Code_index_3 = [...]uint8{0, 5, 10, 15, 20, 25, 30, 35, 40}
	_Code_index_4 = [...]uint8{0, 6, 12, 18, 24, 30, 36, 42, 48, 54}
)

func (i Code) String() string {
	switch {
	case i <= 8:
		return _Code_name_0[_Code_index_0[i]:_Code_index_0[i+1]]
	case i == 1001:
		return _Code_name_1
	case 1011 <= i && i <= 1012:
		i -= 1011
		return _Code_name_2[_Code_index_2[i]:_Code_index_2[i+1]]
	case 1021 <= i && i <= 1028:
		i -= 1021
		return _Code_name_3[_Code_index_3[i]:_Code_index_3[i+1]]
	case 1101 <= i && i <= 1109:
		i -= 1101
		return _Code_name_4[_Code_index_4[i]:_Code_index_4[i+1]]
	case i == 1200:
		return _Code_name_5
	default:
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
