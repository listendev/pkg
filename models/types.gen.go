// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.14.1-0.20230904131938-7533456bc1e5 DO NOT EDIT.
package models

import (
	"time"

	externalRef0 "github.com/listendev/pkg/ecosystem"
	externalRef1 "github.com/listendev/pkg/models/category"
	externalRef2 "github.com/listendev/pkg/models/severity"
	externalRef3 "github.com/listendev/pkg/verdictcode"
)

// Problem defines model for Problem.
type Problem struct {
	Detail string `json:"detail"`
	Title  string `json:"title"`
	Type   string `json:"type"`
}

// Verdict defines model for Verdict.
type Verdict struct {
	Categories []externalRef1.Category `human:"one or more verdict category" json:"categories,omitempty" validate:"required_with=Message,dive,is_category"`
	Code       externalRef3.Code       `human:"the code identifying the verdict type" json:"code,omitempty" validate:"required_with=Message,isdefault|is_verdictcode"`
	CreatedAt  *time.Time              `human:"the moment the verdict was created" json:"created_at,omitempty" validate:"mandatory"`
	Ecosystem  externalRef0.Ecosystem  `human:"the ecosystem the target package belongs to" json:"ecosystem" validate:"is_ecosystem"`
	ExpiresAt  *time.Time              `json:"expires_at"`
	File       string                  `human:"the result file identifying the analysis type" json:"file" validate:"mandatory,is_resultsfile"`
	Message    string                  `human:"the verdict message" json:"message,omitempty" validate:"omitempty,gt=1"`
	Metadata   map[string]interface{}  `json:"metadata,omitempty"`
	Org        string                  `human:"the NPM organization name" json:"org,omitempty" validate:"omitempty,npmorg"`
	Pkg        string                  `human:"the NPM package name" json:"pkg" validate:"mandatory"`
	Severity   externalRef2.Severity   `human:"the verdict severity" json:"severity,omitempty" validate:"required_with=Message,isdefault|is_severity"`
	Shasum     string                  `human:"the NPM package shasum" json:"shasum" validate:"mandatory,shasum"`
	Version    string                  `human:"the NPM package version" json:"version" validate:"mandatory,semver"`
}
